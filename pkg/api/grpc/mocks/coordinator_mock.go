// Code generated by MockGen. DO NOT EDIT.
// Source: coordinator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mapreduce "github.com/mtvarkovsky/go-mapreduce/pkg/mapreduce"
)

// MockCoordinator is a mock of Coordinator interface.
type MockCoordinator struct {
	ctrl     *gomock.Controller
	recorder *MockCoordinatorMockRecorder
}

// MockCoordinatorMockRecorder is the mock recorder for MockCoordinator.
type MockCoordinatorMockRecorder struct {
	mock *MockCoordinator
}

// NewMockCoordinator creates a new mock instance.
func NewMockCoordinator(ctrl *gomock.Controller) *MockCoordinator {
	mock := &MockCoordinator{ctrl: ctrl}
	mock.recorder = &MockCoordinatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoordinator) EXPECT() *MockCoordinatorMockRecorder {
	return m.recorder
}

// CreateMapTask mocks base method.
func (m *MockCoordinator) CreateMapTask(ctx context.Context, inputFile string) (mapreduce.MapTask, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMapTask", ctx, inputFile)
	ret0, _ := ret[0].(mapreduce.MapTask)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMapTask indicates an expected call of CreateMapTask.
func (mr *MockCoordinatorMockRecorder) CreateMapTask(ctx, inputFile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMapTask", reflect.TypeOf((*MockCoordinator)(nil).CreateMapTask), ctx, inputFile)
}

// CreateReduceTask mocks base method.
func (m *MockCoordinator) CreateReduceTask(ctx context.Context, inputFiles ...string) (mapreduce.ReduceTask, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range inputFiles {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateReduceTask", varargs...)
	ret0, _ := ret[0].(mapreduce.ReduceTask)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReduceTask indicates an expected call of CreateReduceTask.
func (mr *MockCoordinatorMockRecorder) CreateReduceTask(ctx interface{}, inputFiles ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, inputFiles...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReduceTask", reflect.TypeOf((*MockCoordinator)(nil).CreateReduceTask), varargs...)
}

// FlushCreatedTasksToWorkers mocks base method.
func (m *MockCoordinator) FlushCreatedTasksToWorkers(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlushCreatedTasksToWorkers", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// FlushCreatedTasksToWorkers indicates an expected call of FlushCreatedTasksToWorkers.
func (mr *MockCoordinatorMockRecorder) FlushCreatedTasksToWorkers(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlushCreatedTasksToWorkers", reflect.TypeOf((*MockCoordinator)(nil).FlushCreatedTasksToWorkers), ctx)
}

// GetMapTask mocks base method.
func (m *MockCoordinator) GetMapTask(ctx context.Context) (mapreduce.MapTask, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMapTask", ctx)
	ret0, _ := ret[0].(mapreduce.MapTask)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMapTask indicates an expected call of GetMapTask.
func (mr *MockCoordinatorMockRecorder) GetMapTask(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMapTask", reflect.TypeOf((*MockCoordinator)(nil).GetMapTask), ctx)
}

// GetReduceTask mocks base method.
func (m *MockCoordinator) GetReduceTask(ctx context.Context) (mapreduce.ReduceTask, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReduceTask", ctx)
	ret0, _ := ret[0].(mapreduce.ReduceTask)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReduceTask indicates an expected call of GetReduceTask.
func (mr *MockCoordinatorMockRecorder) GetReduceTask(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReduceTask", reflect.TypeOf((*MockCoordinator)(nil).GetReduceTask), ctx)
}

// ReportMapTask mocks base method.
func (m *MockCoordinator) ReportMapTask(ctx context.Context, taskResult mapreduce.MapTaskResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportMapTask", ctx, taskResult)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReportMapTask indicates an expected call of ReportMapTask.
func (mr *MockCoordinatorMockRecorder) ReportMapTask(ctx, taskResult interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportMapTask", reflect.TypeOf((*MockCoordinator)(nil).ReportMapTask), ctx, taskResult)
}

// ReportReduceTask mocks base method.
func (m *MockCoordinator) ReportReduceTask(ctx context.Context, taskResult mapreduce.ReduceTaskResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportReduceTask", ctx, taskResult)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReportReduceTask indicates an expected call of ReportReduceTask.
func (mr *MockCoordinatorMockRecorder) ReportReduceTask(ctx, taskResult interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportReduceTask", reflect.TypeOf((*MockCoordinator)(nil).ReportReduceTask), ctx, taskResult)
}
